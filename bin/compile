#!/bin/sh

CPANM='https://raw.githubusercontent.com/miyagawa/cpanminus/master/cpanm'

main() {
   local BUILD_DIR="$(ensure_dir "$1")"
   local CACHE_DIR="$(ensure_dir "$2")"
   local ENV_DIR="$(ensure_dir "$3")"

   # not sure these actually make sense here, but they don't harm anyway
   export PATH="$BUILD_DIR/local/bin:$PATH"
   export PERL5LIB="$BUILD_DIR/local/lib/perl5;$PERL5LIB"

   # fail fast and fail hard
   set -e

   # reuse last compilations if available
   copy_local "$CACHE_DIR" "$BUILD_DIR"

   # build what's necessary
   build "$BUILD_DIR" "$ENV_DIR"

   # save compilation in cache for future reuse
   [ -d "$BUILD_DIR/local" ] && copy_local "$BUILD_DIR" "$CACHE_DIR"

   # prepare files with environment for run stage
   prepare_run_environment "$BUILD_DIR"

   return 0
}

build() {
   local BUILD_DIR="$1"
   local ENV_DIR="$2"
   local invocation

   # execute in subshell to avoid change directory side effects
   (
      cd "$BUILD_DIR"

      if [ ! -e "$BUILD_DIR/local/bin/cpanm" ]; then
         echo "-----> Bootstrapping cpanm"
         invocation="$(
            curl -L --silent "$CPANM"        \
               | perl - App::cpanminus 2>&1
         )"
         echo "$invocation" | indent
      fi

      echo "-----> Installing dependencies"
      local CPANM_OPTS=''
      [ -f "$ENV_DIR/PERL_CPANM_OPT" ] \
         && CPANM_OPTS="$(cat "$ENV_DIR/PERL_CPANM_OPT")"
      invocation="$(
         cpanm 2>&1                 \
            --quiet                 \
            --notest                \
            --no-man-pages          \
            -l "$BUILD_DIR/local"   \
            $CPANM_OPTS             \
            --installdeps
      )"
      echo "$invocation" | indent
   )
}

prepare_run_environment() {
   local BUILD_DIR="$1"

   mkdir -p "$BUILD_DIR/.profile.d"
   cat > "$BUILD_DIR/.profile.d/perl-env.sh" <<'END'
ME="$(readlink -f "$0")"
MD="$(dirname "$ME")"
export PATH="$MD/local/bin:$HOME/bin:$PATH"
export PERL5LIB="$MD/local/lib/perl5:$PERL5LIB"
END
}

copy_local() {
   local SOURCE_DIR="$1"
   local DESTINATION_DIR="$2"
   rm -rf "$DESTINATION_DIR/local"
   if [ -d "$SOURCE_DIR/local" ]; then
      mkdir -p "$DESTINATION_DIR/local"
      cp -a "$SOURCE_DIR/local" "$DESTINATION_DIR/local"
   fi
}

ensure_dir() {
   mkdir -p "$1"
   readlink -f "$1"
}

indent() {
  sed -u 's/^/       /'
}

main "$@"
